[project]
name = "hnet"
version = "0.0.1"
description = "H-Net"
authors = [
    { name = "Sukjun Hwang", email = "sukjunh@cs.cmu.edu" },
    { name = "Brandon Wang", email = "brandon.wang@cartesia.ai"},
    { name = "Albert Gu", email = "agu@cs.cmu.edu" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
dependencies = [
    "torch>=2.5.1",
    "triton>=3.2.0",
    "mamba_ssm @ git+https://github.com/state-spaces/mamba.git@a6a1dae6efbf804c9944a0c2282b437deb4886d8",
    "flash_attn @ file:///home/ka/ka_stud/ka_upygb/repos/hierarchical-hnet/flash_attn-2.8.3+cu128torch2.9-cp312-cp312-linux_x86_64.whl",
    "causal_conv1d @ git+https://github.com/Dao-AILab/causal-conv1d.git@e940ead2fd962c56854455017541384909ca669f",
    "einops",
    "optree",
    "regex",
    "omegaconf",
    "python-dotenv",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=23.0",
    "ruff>=0.1.0",
]
datasets = [
    "huggingface_hub>=0.20.0",
    "datasets>=2.0.0",
]

[project.urls]
Repository = "https://github.com/goombalab/hnet"

[tool.setuptools.packages.find]
where = ["."]
include = ["hnet*", "training*"]
exclude = ["tests*"]

[build-system]
requires = [
    "setuptools>=61.0.0",
    "wheel",
    "torch",
    "packaging",
    "ninja",
]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
]

# Extra build dependencies for packages that don't properly declare them
[tool.uv.extra-build-dependencies]
causal-conv1d = ["torch>=2.5.1", "packaging", "ninja"]
mamba-ssm = ["torch>=2.5.1", "packaging", "ninja"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | outputs
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B007",  # loop variable not used (sometimes intentional)
    "E722",  # bare except (used for robustness in some cases)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]  # Allow unused/star imports in __init__.py
"hnet/modules/rotary.py" = ["F811"]  # Allow function redefinition (conditional implementations)
